byte MMUControl@0
byte IOControl@1
byte Vicky.Master.Control@$D000
byte Bitmap0Control@$D100
byte Bitmap0High@$D103

proc io.select()
	IOControl=A
endproc

zword .poke.address
byte .fill.data

proc poke()
	.poke.address=R
	A=Y:Y=0:.poke.address[Y]=A
endproc

proc set.fill()
	.poke.address=R:.fill.data=Y
endproc

proc do.fill()
	Y=0
	r.for
		A=.fill.data:.poke.address[Y]=A:++.poke.address
	next
endproc

proc map()
	interrupt.off
	CPU->S
	A=$80:MMUControl=A
	S->CPU
	R+8:poke()
	A=$00:MMUControl=A
	interrupt.on
endproc

proc map.into()
	a+8:y=a:map(1)
	R=$2000
endproc

proc map.default()
	map(1,9)
endproc


proc clear.bitmap()
	.fill.data=A
	A=9:a.for
		map.into():.poke.address=R
		32:a.for
			A=.fill.data:Y=0
			repeat
				.poke.address[Y]=A
				++Y:Y=?
			until
			R=.poke.address:R+256:.poke.address=R
		next
	next
	map.default()
endproc

proc clear.sprites()
	io.select(0)
	set.fill($D900,$00)
	do.fill($200)
endproc

proc main()
	io.select(0)
	A=$2F:Vicky.Master.Control=A
	A=1:Bitmap0Control=A
	A=1:Bitmap0High=A
	clear.bitmap($00)
	clear.sprites()


	set.fill($1000,$F0)
	do.fill(1024)

	io.select(0)
	poke($D900,1)
	poke($D901,0)
	poke($D902,$10)
	poke($D903,0)
	poke($D904,128)
	poke($D905,0)
	poke($D906,64)
	poke($D907,0)

	poke($D910,0)

	poke($D908,1)
	poke($D909,0)
	poke($D90A,$10)
	poke($D90B,0)
	poke($D90C,128)
	poke($D90D,0)
	poke($D90E,128)
	poke($D90F,0)
	

	halt
endproc